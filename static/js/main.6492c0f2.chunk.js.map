{"version":3,"sources":["services/economyAPI.js","redux/actions/index.js","pages/Login.js","components/Header.js","components/Table.js","components/Select.js","components/WalletForm.js","pages/Wallet.js","App.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["getFinancialData","fetch","response","json","data","Error","message","REQUEST_CURRENCIES","SAVE_EXPENSE","DELETE_EXPENSE","ENABLE_EDIT","SAVE_EDITED_EXPENSE","Login","validateInputs","target","name","value","setState","passwordIsValid","length","emailIsValid","match","email","login","state","props","makeLogin","history","push","this","className","style","fill","fontSize","htmlFor","type","placeholder","onChange","disabled","onClick","React","Component","connect","dispatch","Header","getAverageExpenseValue","expenses","reduce","acc","curr","currency","ask","exchangeRates","Number","userEmail","size","toFixed","user","wallet","Table","deleteExpense","id","handleEdit","editExpense","editor","map","exp","description","tag","method","convertedValue","key","text","store","deleteExpenseAction","editExpenseAction","Select","label","options","testid","option","index","defaultProps","methodOptions","expenseTag","INITIAL_STATE","isEditing","WalletForm","componentDidMount","fetchCurrencies","handleChange","submitExpense","financialData","saveExpense","cleanState","addExpense","at","componentDidUpdate","restoreDataToEdit","idToEdit","expenseToEdit","find","submitEditedExpense","saveEditedExpense","currencies","backgroundColor","expenseAction","payload","saveEditedExpenseAction","Wallet","App","exact","path","component","initialState","loginReducer","action","walletReducer","Object","keys","filter","reducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEMA,EAAgB,iDAAG,yHAEEC,MAJV,+CAEQ,cAEfC,EAFe,gBAGFA,EAASC,OAHP,cAGfC,EAHe,yBAIdA,GAJc,wCAMf,IAAIC,MAAM,KAAIC,SANC,0DAAH,qDAUPN,ICTFO,EAAqB,qBACrBC,EAAe,eACfC,EAAiB,iBACjBC,EAAc,cACdC,EAAsB,sBAoC5B,ICnCDC,E,kDACJ,aAAe,IAAD,8BACZ,gBAQFC,eAAiB,YAAiB,IAAdC,EAAa,EAAbA,OACVC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MASd,GANa,aAATD,GACF,EAAKE,SAAS,CACZC,gBAAiBF,EAAMG,QAHD,IAOb,UAATJ,EAAkB,CAEpB,EAAKE,SAAS,CACZG,aAAcJ,EAAMK,MAFH,qCAGjBC,MAAON,GAEV,CACF,EA1Ba,EA4BdO,MAAQ,WACN,IAAQD,EAAU,EAAKE,MAAfF,MACR,EAA+B,EAAKG,MAA5BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QACnBD,EAAUJ,GACVK,EAAQC,KAAK,YACd,EA/BC,EAAKJ,MAAQ,CACXJ,cAAc,EACdF,iBAAiB,EACjBI,MAAO,IALG,CAOb,C,0CA4BD,WACE,MAA0CO,KAAKL,MAAvCJ,EAAR,EAAQA,aAAcF,EAAtB,EAAsBA,gBACtB,OACE,0BAAMY,UAAU,sCACd,yBAAKA,UAAU,gCACb,kBAAC,IAAD,CACEC,MAAQ,CAAEC,KAAM,OACdC,SAAU,kBAEd,wBAAIH,UAAU,aAAd,aAEF,yBAAKA,UAAU,+BACb,2BAAOA,UAAU,cAAcI,QAAQ,SAAvC,QAEE,2BACEnB,KAAK,QACLoB,KAAK,QACLC,YAAY,iBACZ,cAAY,cACZC,SAAWR,KAAKhB,kBAGpB,2BAAOiB,UAAU,cAAcI,QAAQ,YAAvC,WAEE,2BACEnB,KAAK,WACLoB,KAAK,WACLC,YAAY,gBACZ,cAAY,iBACZC,SAAWR,KAAKhB,kBAGpB,4BACEiB,UAAU,YACVK,KAAK,SACLpB,KAAK,WACLuB,WAAalB,GAAgBF,GAC7BqB,QAAUV,KAAKN,OALjB,WAYP,K,GAhFiBiB,IAAMC,WA4FXC,cAAQ,MATI,SAACC,GAAD,MAAe,CACxCjB,UAAW,SAACJ,GAAD,OAAWqB,EDnFe,CACrCR,KARmB,QAQNnB,MCkF8BM,GAAhC,EADc,GASZoB,CAAkC9B,G,QC9F3CgC,E,4MACJC,uBAAyB,SAACC,GACxB,OAAIA,EAAS3B,OAAS,EACb,EAED2B,EAASC,QAAO,SAACC,EAAKC,GAC5B,IAAQjC,EAAmCiC,EAAnCjC,MAAOkC,EAA4BD,EAA5BC,SACPC,EADmCF,EAAlBG,cACKF,GAAtBC,IAER,OAAOH,EADgBK,OAAOrC,GAASqC,OAAOF,EAE/C,GAAE,EACJ,E,4CAED,WACE,MAAgCtB,KAAKJ,MAA7B6B,EAAR,EAAQA,UAAWR,EAAnB,EAAmBA,SACnB,OACE,yBAAKhB,UAAU,oBACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAUyB,KAAO,GAAKxB,MAAQ,CAAEC,KAAM,UACtC,wBAAIF,UAAU,aAAd,aAEF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,YAAY,cAAY,eAAewB,IAEtD,yBAAKxB,UAAU,qBACb,kBAAC,IAAD,CAAQC,MAAQ,CAAEC,KAAM,UACxB,uBAAGF,UAAU,YAAY,cAAY,eAClCD,KAAKgB,uBAAuBC,GAAUU,QAAQ,IAEjD,uBAAG1B,UAAU,YAAY,cAAY,yBAArC,SAKT,K,GAnCkBW,aAgDNC,eALS,SAAClB,GAAD,MAAY,CAClC8B,UAAW9B,EAAMiC,KAAKnC,MACtBwB,SAAUtB,EAAMkC,OAAOZ,SAFD,GAKTJ,CAAyBE,G,QC9ClCe,E,4MACJC,cAAgB,SAACC,IAEfD,EAD0B,EAAKnC,MAAvBmC,eACMC,EACf,E,EAEDC,WAAa,SAACD,GACZ,MAAgC,EAAKpC,MAA7BsC,EAAR,EAAQA,YAAR,EAAqBC,QAEnBD,EAAYF,EAEf,E,4CAED,WAAU,IAAD,OACCf,EAAajB,KAAKJ,MAAlBqB,SACR,OACE,yBAAKhB,UAAU,uBACb,+BACE,+BACE,4BACE,+CACA,mCACA,sDACA,qCACA,qCACA,mDACA,gDACA,qDACA,gDAGJ,+BAEIgB,EAASmB,KAAI,SAACC,GACZ,IAAQC,EAA6DD,EAA7DC,YAAaC,EAAgDF,EAAhDE,IAAKC,EAA2CH,EAA3CG,OAAQrD,EAAmCkD,EAAnClD,MAAOkC,EAA4BgB,EAA5BhB,SACzC,EADqEgB,EAAlBd,cACfF,GAA5BC,EAAR,EAAQA,IAAKpC,EAAb,EAAaA,KACPuD,GAAkBjB,OAAOrC,GAASqC,OAAOF,IAAMK,QAAQ,GAC7D,OACE,wBAAIe,IAAML,EAAIL,IACZ,4BAAI,2BAAIM,IACR,4BAAI,2BAAIC,IACR,4BAAI,2BAAIC,IACR,4BAAI,2BAAIhB,OAAOrC,GAAOwC,QAAQ,KAC9B,4BAAI,2BAAIzC,IACR,4BAAI,2BAAIsC,OAAOF,GAAKK,QAAQ,KAC5B,4BAAI,2BAAIc,IACR,oCACA,4BACE,4BACExC,UAAU,WACVK,KAAK,SACLpB,KAAK,OACLyD,KAAK,SACL,cAAY,WACZjC,QAAU,kBAAM,EAAKuB,WAAWI,EAAIL,GAA1B,GAEV,kBAAC,IAAD,CAAQ9B,MAAQ,CAAEE,SAAU,WAE9B,4BACEH,UAAU,WACVK,KAAK,SACLpB,KAAK,SACLyD,KAAK,UACL,cAAY,aACZjC,QAAU,kBAAM,EAAKqB,cAAcM,EAAIL,GAA7B,GAEV,kBAAC,IAAD,CAAS9B,MAAQ,CAAEC,KAAM,UAAWC,SAAU,YAIvD,MAMZ,K,GA5EiBQ,aAmGLC,eAVS,SAAC+B,GAAD,MAAY,CAClC3B,SAAU2B,EAAMf,OAAOZ,SACvBkB,OAAQS,EAAMf,OAAOM,OAFC,IAKG,SAACrB,GAAD,MAAe,CACxCiB,cAAe,SAACC,GAAD,OAAQlB,EHrFU,SAACkB,GAAD,MAAS,CAC1C1B,KAAM1B,EACNO,MAAO6C,EAF0B,CGqFDa,CAAoBb,GAArC,EACfE,YAAa,SAACF,GAAD,OAAQlB,EHjFU,SAACkB,GAAD,MAAS,CACxC1B,KAAMzB,EACNM,MAAO6C,EAFwB,CGiFDc,CAAkBd,GAAnC,EAFY,GAKZnB,CAA6CiB,G,wBCxG5D,SAASiB,EAAT,GAAoE,IAAlD7D,EAAiD,EAAjDA,KAAM8D,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQ1C,EAAmB,EAAnBA,SAAUrB,EAAS,EAATA,MACxD,OACE,2BAAOkB,QAAUnB,GACb8D,EACF,4BACEhB,GAAK9C,EACLA,KAAOA,EACP,cAAcgE,EACd1C,SAAWA,EACXrB,MAAQA,GAEP8D,EAAQb,KAAI,SAACe,EAAQC,GAAT,OACX,4BACEV,IAAMU,EACNjE,MAAQgE,GAEPA,EALQ,KAWpB,CAWDJ,EAAOM,aAAe,CACpBH,OAAQ,GACRF,MAAO,IAGMD,QC9BTO,EAAgB,CAAC,WAAY,0BAAqB,0BAClDC,EAAa,CAAC,oBAAe,QAAS,WAAY,aAAc,YAGhEC,EAAgB,CACpBrE,MAAO,GACPkC,SAAU,MACVmB,OAAQ,WACRD,IAAK,oBACLD,YAAa,GACbf,cAAe,GACfkC,WAAW,GAGPC,E,kDACJ,aAAe,IAAD,8BACZ,gBAIFC,kBAAoB,YAElBC,EAD4B,EAAKhE,MAAzBgE,kBAET,EARa,EAUdC,aAAe,YAAiB,IAAd5E,EAAa,EAAbA,OACRC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,EAAKC,SAAL,eAAiBF,EAAOC,GACzB,EAba,EAed2E,cAfc,gCAeE,8GACc3F,IADd,OACR4F,EADQ,OAEd,EAAK3E,SAAS,CACZmC,cAAewC,IACd,WAAQ,EAAKC,cAAe,EAAKC,YAAe,IAJrC,2CAfF,EAsBdA,WAAa,WACX,EAAK7E,SAASoE,EACf,EAxBa,EA0BdQ,YAAc,WACZ,MAAqE,EAAKrE,MAAlER,EAAR,EAAQA,MAAOkC,EAAf,EAAeA,SAAUmB,EAAzB,EAAyBA,OAAQD,EAAjC,EAAiCA,IAAKD,EAAtC,EAAsCA,YAAaf,EAAnD,EAAmDA,cACnD,EAAiC,EAAK3B,MAA9BqB,EAAR,EAAQA,UAWRiD,EAXA,EAAkBA,YAEL,CACXlC,GAAIf,EAAS3B,OAAS,EAAI,EAAI2B,EAASkD,IAFxB,GAEoCnC,GAAK,EACxD7C,QACAkC,WACAmB,SACAD,MACAD,cACAf,iBAGH,EAxCa,EA0Cd6C,mBAAqB,WACnB,EAAKC,mBACN,EA5Ca,EA8CdA,kBAAoB,WAClB,IAAQlC,EAAW,EAAKvC,MAAhBuC,OACAsB,EAAc,EAAK9D,MAAnB8D,UAER,GAAItB,IAAWsB,EAAW,CACxB,MAA+B,EAAK7D,MAA5B0E,EAAR,EAAQA,SACFC,EADN,EAAkBtD,SACauD,MAAK,SAACnC,GAAD,OAASA,EAAIL,KAAOsC,CAApB,IAC5BnF,EAA8CoF,EAA9CpF,MAAOkC,EAAuCkD,EAAvClD,SAAUmB,EAA6B+B,EAA7B/B,OAAQD,EAAqBgC,EAArBhC,IAAKD,EAAgBiC,EAAhBjC,YACtC,EAAKlD,SAAS,CACZD,QACAkC,WACAmB,SACAD,MACAD,cACAmB,WAAW,GAEd,CACF,EA/Da,EAiEdgB,oBAjEc,gCAiEQ,8GACQtG,IADR,OACd4F,EADc,OAEpB,EAAK3E,SAAS,CACZmC,cAAewC,IACd,WAAQ,EAAK9B,aAAc,EAAKgC,YAAe,IAJ9B,2CAjER,EAwEdhC,WAAa,WACX,MAAqE,EAAKtC,MAAlER,EAAR,EAAQA,MAAOkC,EAAf,EAAeA,SAAUmB,EAAzB,EAAyBA,OAAQD,EAAjC,EAAiCA,IAAKD,EAAtC,EAAsCA,YAAaf,EAAnD,EAAmDA,cACnD,EAAwC,EAAK3B,MAArC0E,EAAR,EAAQA,UAURI,EAVA,EAAkBA,mBAUAJ,EATL,CACXtC,GAAIsC,EACJnF,QACAkC,WACAmB,SACAD,MACAD,cACAf,iBAGH,EAnFC,EAAK5B,MAAQ6D,EAFD,CAGb,C,0CAoFD,WACE,MAA+BxD,KAAKJ,MAA5B+E,EAAR,EAAQA,WAAYxC,EAApB,EAAoBA,OACpB,EAAsDnC,KAAKL,MAAnDR,EAAR,EAAQA,MAAOkC,EAAf,EAAeA,SAAUmB,EAAzB,EAAyBA,OAAQD,EAAjC,EAAiCA,IAAKD,EAAtC,EAAsCA,YACtC,OACE,6BACE,0BAAMrC,UAAU,mCACd,2BAAOI,QAAQ,SAAf,QAEE,2BACEnB,KAAK,QACLoB,KAAK,SACL0C,MAAM,QACNzC,YAAY,QACZ,cAAY,cACZC,SAAWR,KAAK6D,aAChB1E,MAAQA,KAGZ,2BAAOkB,QAAQ,eAAf,kBAEE,2BACEnB,KAAK,cACL8D,MAAM,kBACNzC,YAAY,eACZ,cAAY,oBACZC,SAAWR,KAAK6D,aAChB1E,MAAQmD,KAGZ,kBAAC,EAAD,CACEpD,KAAK,WACLgE,OAAO,iBACPF,MAAM,QACNC,QAAU0B,EACVnE,SAAWR,KAAK6D,aAChB1E,MAAQkC,IAEV,kBAAC,EAAD,CACEnC,KAAK,SACLgE,OAAO,eACPF,MAAM,YACNC,QAAUK,EACV9C,SAAWR,KAAK6D,aAChB1E,MAAQqD,IAEV,kBAAC,EAAD,CACEtD,KAAK,MACLgE,OAAO,YACPF,MAAM,YACNC,QAAUM,EACV/C,SAAWR,KAAK6D,aAChB1E,MAAQoD,IAGRJ,EAEI,4BACElC,UAAU,qBACVK,KAAK,SACLpB,KAAK,cACLyD,KAAK,iBACLjC,QAAUV,KAAKyE,qBAEf,kBAAC,IAAD,CAAoBvE,MAAQ,CAAEC,KAAM,YAGtC,4BACEF,UAAU,qBACVK,KAAK,SACLpB,KAAK,aACLyD,KAAK,oBACLjC,QAAUV,KAAK8D,cACf5D,MAAQ,CAAE0E,gBAAiB,iBAG3B,kBAAC,IAAD,CAAW1E,MAAQ,CAAEC,KAAM,aAM1C,K,GAzKsBS,aAmMVC,eAbS,SAAC+B,GAAD,MAAY,CAClC+B,WAAY/B,EAAMf,OAAO8C,WACzB1D,SAAU2B,EAAMf,OAAOZ,SACvBkB,OAAQS,EAAMf,OAAOM,OACrBmC,SAAU1B,EAAMf,OAAOyC,SAJD,IAOG,SAACxD,GAAD,MAAe,CACxCoD,WAAY,SAAC3F,GAAD,OAAUuC,EL5KK,SAACvC,GAAD,MAAW,CACtC+B,KAAM3B,EAAcQ,MAAOZ,EADA,CK4KIsG,CAActG,GAAjC,EACZqF,gBAAiB,kBAAM9C,ELnLvB,iDAAO,WAAOA,GAAP,iGACkB3C,IADlB,OACCE,EADD,OAELyC,EA1BgC,CAClCR,KAAM5B,EACNS,MAwB4Bd,IAFrB,2CAAP,sDKmLiB,EACjBqG,kBAAmB,SAAC1C,EAAIzD,GAAL,OAAcuC,EL7LI,SAACkB,EAAIzD,GAAL,MAAe,CACpD+B,KAAMxB,EACNgG,QAAS,CACP9C,KACAzD,QAJmC,CK6LKwG,CAAwB/C,EAAIzD,GAAnD,EAHM,GAMZsC,CAA6C6C,GCvNtDsB,E,4JACJ,WACE,OACE,yBAAK/E,UAAU,eACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,kBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,kBACb,kBAAC,EAAD,OAIP,K,GAjBkBU,IAAMC,WAoBZoE,ICRAC,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYrG,IAClC,kBAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,YAAYC,UAAYJ,KAIjD,E,+BCfKK,EAAe,CACnB5F,MAAO,IAeM6F,MAZf,WAAqD,IAA/B3F,EAA8B,uDAAtB0F,EAAcE,EAAQ,uCAClD,MACK,UADGA,EAAOjF,KAEN,2BACFX,GADL,IAEEF,MAAO8F,EAAOpG,QAGTQ,CAEV,E,QCXK0F,EAAe,CACnBV,WAAY,GACZ1D,SAAU,GACVkB,QAAQ,EACRmC,SAAU,GA2CGkB,MAxCf,WAAsD,IAA/B7F,EAA8B,uDAAtB0F,EAAcE,EAAQ,uCACnD,OAAQA,EAAOjF,MACf,KAAK5B,EACH,OAAO,2BACFiB,GADL,IAEEgF,WAAYc,OAAOC,KAAKH,EAAOpG,OAC5BwG,QAAO,SAACvE,GAAD,MAAmB,SAATA,CAAV,MAEd,KAAKzC,EACH,OAAO,2BACFgB,GADL,IAEEsB,SAAS,GAAD,mBAAMtB,EAAMsB,UAAZ,CAAsBsE,EAAOpG,UAEzC,KAAKP,EACH,OAAO,2BACFe,GADL,IAEEsB,SAAUtB,EAAMsB,SAAS0E,QAAO,SAACtD,GAAD,OAASA,EAAIL,KAAOuD,EAAOpG,KAA3B,MAEpC,KAAKN,EACH,OAAO,2BACFc,GADL,IAEEwC,QAAQ,EACRmC,SAAUiB,EAAOpG,QAErB,KAAKL,EACH,OAAO,2BACFa,GADL,IAEEsB,SAAUtB,EAAMsB,SAASmB,KAAI,SAACC,GAC5B,OAAIA,EAAIL,KAAOuD,EAAOT,QAAQ9C,GACrB,eAAMuD,EAAOT,QAAQvG,MAEvB8D,CACR,IACDF,QAAQ,IAEZ,QACE,OAAOxC,EAEV,ECtCciG,GALCC,0BAAgB,CAC9BjE,KAAM0D,EACNzD,OAAQ2D,ICFJ5C,GAAQkD,sBACZF,GACAG,8BACEC,0BAAgBC,OAIhBC,OAAOC,UACTD,OAAOtD,MAAQA,IAGFA,UCRfwD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU1D,MAAQA,IAChB,kBAAC,EAAD,SAIN2D,SAASC,eAAe,Q","file":"static/js/main.6492c0f2.chunk.js","sourcesContent":["const BASE_API = 'https://economia.awesomeapi.com.br/json/all';\n\nconst getFinancialData = async () => {\n  try {\n    const response = await fetch(BASE_API);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport default getFinancialData;\n","import getFinancialData from '../../services/economyAPI';\n\nexport const LOGIN = 'LOGIN';\nexport const REQUEST_CURRENCIES = 'REQUEST_CURRENCIES';\nexport const SAVE_EXPENSE = 'SAVE_EXPENSE';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const ENABLE_EDIT = 'ENABLE_EDIT';\nexport const SAVE_EDITED_EXPENSE = 'SAVE_EDITED_EXPENSE';\n\nexport const loginAction = (value) => ({\n  type: LOGIN, value,\n});\n\nconst currenciesAction = (data) => ({\n  type: REQUEST_CURRENCIES,\n  value: data,\n});\n\nexport const deleteExpenseAction = (id) => ({\n  type: DELETE_EXPENSE,\n  value: id,\n});\n\nexport const editExpenseAction = (id) => ({\n  type: ENABLE_EDIT,\n  value: id,\n});\n\nexport const saveEditedExpenseAction = (id, data) => ({\n  type: SAVE_EDITED_EXPENSE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport function fetchCurrenciesData() {\n  return async (dispatch) => {\n    const response = await getFinancialData();\n    dispatch(currenciesAction(response));\n  };\n}\n\nexport const expenseAction = (data) => ({\n  type: SAVE_EXPENSE, value: data,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nimport { BiWallet } from 'react-icons/bi';\nimport { loginAction } from '../redux/actions';\n// import styles from '../styles/Login.module.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      emailIsValid: false,\n      passwordIsValid: false,\n      email: '',\n    };\n  }\n\n  validateInputs = ({ target }) => {\n    const { name, value } = target;\n\n    const passwordMinLength = 6;\n    if (name === 'password') {\n      this.setState({\n        passwordIsValid: value.length >= passwordMinLength,\n      });\n    }\n\n    if (name === 'email') {\n      const emailRegex = /^[\\w-\\\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n      this.setState({\n        emailIsValid: value.match(emailRegex),\n        email: value,\n      });\n    }\n  }\n\n  login = () => {\n    const { email } = this.state;\n    const { makeLogin, history } = this.props;\n    makeLogin(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { emailIsValid, passwordIsValid } = this.state;\n    return (\n      <form className=\"flex-column absolute-center shadow\">\n        <div className=\"flex gap align-c primary pad\">\n          <BiWallet\n            style={ { fill: 'gold',\n              fontSize: 'var(--fs-xl)' } }\n          />\n          <h1 className=\"highlight\">MyWallet</h1>\n        </div>\n        <div className=\"flex-column gap align-c pad\">\n          <label className=\"flex-column\" htmlFor=\"email\">\n            Email\n            <input\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"user@email.com\"\n              data-testid=\"email-input\"\n              onChange={ this.validateInputs }\n            />\n          </label>\n          <label className=\"flex-column\" htmlFor=\"password\">\n            Password\n            <input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Your password\"\n              data-testid=\"password-input\"\n              onChange={ this.validateInputs }\n            />\n          </label>\n          <button\n            className=\"highlight\"\n            type=\"submit\"\n            name=\"loginBtn\"\n            disabled={ !(emailIsValid && passwordIsValid) }\n            onClick={ this.login }\n          >\n            Entrar\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  makeLogin: (email) => dispatch(loginAction(email)),\n});\n\nLogin.propTypes = {\n  makeLogin: propTypes.func.isRequired,\n  history: propTypes.objectOf(Object).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { BiWallet } from 'react-icons/bi';\nimport { GiCash } from 'react-icons/gi';\n\nclass Header extends Component {\n  getAverageExpenseValue = (expenses) => {\n    if (expenses.length < 1) {\n      return 0;\n    }\n    return (expenses.reduce((acc, curr) => {\n      const { value, currency, exchangeRates } = curr;\n      const { ask } = exchangeRates[currency];\n      const convertedValue = Number(value) * Number(ask);\n      return acc + convertedValue;\n    }, 0));\n  };\n\n  render() {\n    const { userEmail, expenses } = this.props;\n    return (\n      <div className=\"flex space-b pad\">\n        <div className=\"flex gap align-c\">\n          <BiWallet size={ 70 } style={ { fill: 'gold' } } />\n          <h1 className=\"highlight\">MyWallet</h1>\n        </div>\n        <div className=\"flex-column gap\">\n          <div className=\"flex txt-gap\">\n            <p className=\"highlight\" data-testid=\"email-field\">{userEmail}</p>\n          </div>\n          <div className=\"flex txt-gap bold\">\n            <GiCash style={ { fill: 'gold' } } />\n            <p className=\"highlight\" data-testid=\"total-field\">\n              {this.getAverageExpenseValue(expenses).toFixed(2)}\n            </p>\n            <p className=\"highlight\" data-testid=\"header-currency-field\">BRL</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  userEmail: propTypes.string.isRequired,\n  expenses: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BsTrash } from 'react-icons/bs';\nimport { BiEdit } from 'react-icons/bi';\n\nimport propTypes from 'prop-types';\nimport { deleteExpenseAction, editExpenseAction } from '../redux/actions';\n\nclass Table extends Component {\n  deleteExpense = (id) => {\n    const { deleteExpense } = this.props;\n    deleteExpense(id);\n  };\n\n  handleEdit = (id) => {\n    const { editExpense, editor } = this.props;\n    if (!editor) {\n      editExpense(id);\n    }\n  }\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <div className=\"flex justify-center\">\n        <table>\n          <thead>\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              expenses.map((exp) => {\n                const { description, tag, method, value, currency, exchangeRates } = exp;\n                const { ask, name } = exchangeRates[currency];\n                const convertedValue = (Number(value) * Number(ask)).toFixed(2);\n                return (\n                  <tr key={ exp.id }>\n                    <td><p>{description}</p></td>\n                    <td><p>{tag}</p></td>\n                    <td><p>{method}</p></td>\n                    <td><p>{Number(value).toFixed(2)}</p></td>\n                    <td><p>{name}</p></td>\n                    <td><p>{Number(ask).toFixed(2)}</p></td>\n                    <td><p>{convertedValue}</p></td>\n                    <td>Real</td>\n                    <td>\n                      <button\n                        className=\"btn-icon\"\n                        type=\"button\"\n                        name=\"edit\"\n                        text=\"Editar\"\n                        data-testid=\"edit-btn\"\n                        onClick={ () => this.handleEdit(exp.id) }\n                      >\n                        <BiEdit style={ { fontSize: '35px' } } />\n                      </button>\n                      <button\n                        className=\"btn-icon\"\n                        type=\"button\"\n                        name=\"delete\"\n                        text=\"Excluir\"\n                        data-testid=\"delete-btn\"\n                        onClick={ () => this.deleteExpense(exp.id) }\n                      >\n                        <BsTrash style={ { fill: '#ff0000', fontSize: '35px' } } />\n                      </button>\n                    </td>\n                  </tr>);\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  description: propTypes.string,\n  tag: propTypes.string,\n  method: propTypes.string,\n  value: propTypes.string,\n  currency: propTypes.string,\n  exchangeRates: propTypes.arrayOf(propTypes.object),\n  ask: propTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (store) => ({\n  expenses: store.wallet.expenses,\n  editor: store.wallet.editor,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpense: (id) => dispatch(deleteExpenseAction(id)),\n  editExpense: (id) => dispatch(editExpenseAction(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nfunction Select({ name, label, options, testid, onChange, value }) {\n  return (\n    <label htmlFor={ name }>\n      { label }\n      <select\n        id={ name }\n        name={ name }\n        data-testid={ testid }\n        onChange={ onChange }\n        value={ value }\n      >\n        {options.map((option, index) => (\n          <option\n            key={ index }\n            value={ option }\n          >\n            {option}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n\nSelect.propTypes = {\n  name: propTypes.string.isRequired,\n  testid: propTypes.string,\n  label: propTypes.string,\n  options: propTypes.arrayOf(propTypes.string).isRequired,\n  onChange: propTypes.func.isRequired,\n  value: propTypes.string.isRequired,\n};\n\nSelect.defaultProps = {\n  testid: '',\n  label: '',\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { MdPlaylistAddCheck } from 'react-icons/md';\nimport { GrFormAdd } from 'react-icons/gr';\n\nimport Select from './Select';\nimport { expenseAction, fetchCurrenciesData,\n  saveEditedExpenseAction } from '../redux/actions';\nimport getFinancialData from '../services/economyAPI';\n\nconst methodOptions = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst expenseTag = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde',\n];\n\nconst INITIAL_STATE = {\n  value: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n  description: '',\n  exchangeRates: [],\n  isEditing: false,\n};\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n    this.state = INITIAL_STATE;\n  }\n\n  componentDidMount = () => {\n    const { fetchCurrencies } = this.props;\n    fetchCurrencies();\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  submitExpense = async () => {\n    const financialData = await getFinancialData();\n    this.setState({\n      exchangeRates: financialData,\n    }, () => { this.saveExpense(); this.cleanState(); });\n  }\n\n  cleanState = () => {\n    this.setState(INITIAL_STATE);\n  }\n\n  saveExpense = () => {\n    const { value, currency, method, tag, description, exchangeRates } = this.state;\n    const { expenses, addExpense } = this.props;\n    const lastPos = -1;\n    const data = {\n      id: expenses.length < 1 ? 0 : expenses.at(lastPos).id + 1,\n      value,\n      currency,\n      method,\n      tag,\n      description,\n      exchangeRates,\n    };\n    addExpense(data);\n  }\n\n  componentDidUpdate = () => {\n    this.restoreDataToEdit();\n  };\n\n  restoreDataToEdit = () => {\n    const { editor } = this.props;\n    const { isEditing } = this.state;\n\n    if (editor && !isEditing) {\n      const { idToEdit, expenses } = this.props;\n      const expenseToEdit = expenses.find((exp) => exp.id === idToEdit);\n      const { value, currency, method, tag, description } = expenseToEdit;\n      this.setState({\n        value,\n        currency,\n        method,\n        tag,\n        description,\n        isEditing: true,\n      });\n    }\n  };\n\n  submitEditedExpense = async () => {\n    const financialData = await getFinancialData();\n    this.setState({\n      exchangeRates: financialData,\n    }, () => { this.handleEdit(); this.cleanState(); });\n  }\n\n  handleEdit = () => {\n    const { value, currency, method, tag, description, exchangeRates } = this.state;\n    const { idToEdit, saveEditedExpense } = this.props;\n    const data = {\n      id: idToEdit,\n      value,\n      currency,\n      method,\n      tag,\n      description,\n      exchangeRates,\n    };\n    saveEditedExpense(idToEdit, data);\n  }\n\n  render() {\n    const { currencies, editor } = this.props;\n    const { value, currency, method, tag, description } = this.state;\n    return (\n      <div>\n        <form className=\"flex justify-center align-c gap\">\n          <label htmlFor=\"Value\">\n            Valor\n            <input\n              name=\"value\"\n              type=\"number\"\n              label=\"Valor\"\n              placeholder=\"Valor\"\n              data-testid=\"value-input\"\n              onChange={ this.handleChange }\n              value={ value }\n            />\n          </label>\n          <label htmlFor=\"description\">\n            Descrição\n            <input\n              name=\"description\"\n              label=\"Descrição\"\n              placeholder=\"Digite aqui.\"\n              data-testid=\"description-input\"\n              onChange={ this.handleChange }\n              value={ description }\n            />\n          </label>\n          <Select\n            name=\"currency\"\n            testid=\"currency-input\"\n            label=\"Moeda\"\n            options={ currencies }\n            onChange={ this.handleChange }\n            value={ currency }\n          />\n          <Select\n            name=\"method\"\n            testid=\"method-input\"\n            label=\"Pagamento\"\n            options={ methodOptions }\n            onChange={ this.handleChange }\n            value={ method }\n          />\n          <Select\n            name=\"tag\"\n            testid=\"tag-input\"\n            label=\"Categoria\"\n            options={ expenseTag }\n            onChange={ this.handleChange }\n            value={ tag }\n          />\n          {\n            editor\n              ? (\n                <button\n                  className=\"round flex align-c\"\n                  type=\"button\"\n                  name=\"editExpense\"\n                  text=\"Editar despesa\"\n                  onClick={ this.submitEditedExpense }\n                >\n                  <MdPlaylistAddCheck style={ { fill: 'white' } } />\n                </button>)\n              : (\n                <button\n                  className=\"round flex align-c\"\n                  type=\"button\"\n                  name=\"addExpense\"\n                  text=\"Adicionar despesa\"\n                  onClick={ this.submitExpense }\n                  style={ { backgroundColor: 'var(--theme)' } }\n\n                >\n                  <GrFormAdd style={ { fill: 'white' } } />\n                </button>)\n          }\n        </form>\n      </div>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  currencies: propTypes.arrayOf(propTypes.string).isRequired,\n  expenses: propTypes.arrayOf(propTypes.object).isRequired,\n  addExpense: propTypes.func.isRequired,\n  saveEditedExpense: propTypes.func.isRequired,\n  fetchCurrencies: propTypes.func.isRequired,\n  editor: propTypes.bool.isRequired,\n  idToEdit: propTypes.number.isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n  currencies: store.wallet.currencies,\n  expenses: store.wallet.expenses,\n  editor: store.wallet.editor,\n  idToEdit: store.wallet.idToEdit,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpense: (data) => dispatch(expenseAction(data)),\n  fetchCurrencies: () => dispatch(fetchCurrenciesData()),\n  saveEditedExpense: (id, data) => dispatch(saveEditedExpenseAction(id, data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n","import React from 'react';\nimport Header from '../components/Header';\nimport Table from '../components/Table';\nimport WalletForm from '../components/WalletForm';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <div className=\"flex-column\">\n        <div className=\"theme-bg shadow\">\n          <div className=\"gap pad\">\n            <Header />\n          </div>\n        </div>\n        <div className=\"gap pad shadow\">\n          <WalletForm />\n        </div>\n        <div className=\"gap pad shadow\">\n          <Table />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const initialState = {\n  email: '',\n};\n\nfunction loginReducer(state = initialState, action) {\n  switch (action.type) {\n  case 'LOGIN':\n    return {\n      ...state,\n      email: action.value,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default loginReducer;\n","import { REQUEST_CURRENCIES, SAVE_EXPENSE,\n  DELETE_EXPENSE, ENABLE_EDIT, SAVE_EDITED_EXPENSE } from '../actions';\n\nconst initialState = {\n  currencies: [], // array de string\n  expenses: [], // array de objetos, com cada objeto tendo as chaves id, value, currency, method, tag, description e exchangeRates\n  editor: false, // valor booleano que indica de uma despesa está sendo editada\n  idToEdit: 0, // valor numérico que armazena o id da despesa que esta sendo editada\n};\n\nfunction walletReducer(state = initialState, action) {\n  switch (action.type) {\n  case REQUEST_CURRENCIES:\n    return {\n      ...state,\n      currencies: Object.keys(action.value)\n        .filter((curr) => curr !== 'USDT'),\n    };\n  case SAVE_EXPENSE:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.value],\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((exp) => exp.id !== action.value),\n    };\n  case ENABLE_EDIT:\n    return {\n      ...state,\n      editor: true,\n      idToEdit: action.value,\n    };\n  case SAVE_EDITED_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.map((exp) => {\n        if (exp.id === action.payload.id) {\n          return ({ ...action.payload.data });\n        }\n        return exp;\n      }),\n      editor: false,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\n\nimport loginReducer from './user';\nimport walletReducer from './wallet';\n\nconst reducer = combineReducers({\n  user: loginReducer,\n  wallet: walletReducer,\n});\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={ store }>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}